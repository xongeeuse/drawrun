<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dasima.drawrun.domain.course.mapper.CourseMapper">
    
    <resultMap id="UserPathResultMap" type="com.dasima.drawrun.domain.course.entity.UserPath">
        <id column="user_path_id" property="userPathId"/>
        <result column="user_id" property="userId"/>
        <result column="path_id" property="pathId"/>
        <result column="path_img_url" property="pathImgUrl"/>
        <result column="name" property="name"/>
        <result column="create_date" property="createDate"/>
        <result column="address" property="address"/>
        <result column="distance" property="distance"/>
    </resultMap>

    <resultMap id="BookmarkResultMap" type="com.dasima.drawrun.domain.course.entity.Bookmark">
        <id column="bookmark_id" property="bookmarkId"/>
        <result column="user_path_id" property="userPathId"/>
        <result column="user_id" property="userId"/>
        <result column="create_date" property="createDate"/>
    </resultMap>

    <select id="list" resultMap="UserPathResultMap">
        select up.*
        from user_path up
        left join(
            select user_path_id, count(*) as bookmark_count
            from bookmark
            group by user_path_id
        ) b on up.user_path_id = b.user_path_id
        order by coalesce(b.bookmark_count, 0) desc
    </select>

    <select id="keyword" parameterType="string" resultMap="UserPathResultMap">
        select up.*
        from user_path up
                 left join(
            select user_path_id, count(*) as bookmark_count
            from bookmark
            group by user_path_id
        ) b on up.user_path_id = b.user_path_id
        where up.name like concat('%', #{keyword}, '%')
        order by coalesce(b.bookmark_count, 0) desc
    </select>
    
    <select id="isBookmark" resultType="boolean">
        select exists (
            select 1
            from bookmark
            where user_id = #{userId} and user_path_id = #{userPathId}
        )

    </select>

    <insert id="bookmark" parameterType="Bookmark">
        insert into bookmark
        values (0, #{userPathId}, #{userId}, now());
    </insert>

    <delete id="bookmarkcancle" parameterType="Bookmark">
        delete from bookmark
        where user_id = #{userId} and user_path_id = #{userPathId}

    </delete>

    <insert id="save" parameterType="UserPath">
        insert into user_path
        values (0, #{userId}, #{pathId}, #{pathImgUrl}, #{name}, now(), #{distance}, #{address})
    </insert>

</mapper>