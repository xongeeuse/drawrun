package com.example.drawrun.ui.auth

import android.content.Intent
import android.os.Bundle
import android.widget.Button
import android.widget.EditText
import android.widget.ProgressBar
import android.widget.TextView
import android.widget.Toast
import androidx.activity.viewModels
import androidx.appcompat.app.AppCompatActivity
import androidx.core.content.res.ResourcesCompat
import androidx.lifecycle.lifecycleScope
import com.example.drawrun.MainActivity
import com.example.drawrun.R
import com.example.drawrun.data.repository.AuthRepository
import com.example.drawrun.utils.RetrofitInstance
import com.example.drawrun.utils.SecureStorage
import com.example.drawrun.viewmodel.AuthViewModelFactory
import com.example.drawrun.viewmodel.LoginState
import com.example.drawrun.viewmodel.LoginViewModel
import kotlinx.coroutines.flow.collect

class LoginActivity : AppCompatActivity() {

    private lateinit var userIdEditText: EditText
    private lateinit var passwordEditText: EditText
    private lateinit var loginButton: Button
    private lateinit var progressBar: ProgressBar

    // ViewModel Ï¥àÍ∏∞Ìôî
    private val viewModel: LoginViewModel by viewModels {
        AuthViewModelFactory(AuthRepository(RetrofitInstance.api))
    }

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_login)

        val pageTitleTextView = findViewById<TextView>(R.id.pageTitleTextView)
        val customFont = ResourcesCompat.getFont(this, R.font.praise_regular)
        pageTitleTextView.typeface = customFont

        // UI ÏöîÏÜå Ï¥àÍ∏∞Ìôî
        userIdEditText = findViewById(R.id.etUserId)
        passwordEditText = findViewById(R.id.etPassword)
        loginButton = findViewById(R.id.btnLogin)
        progressBar = findViewById(R.id.progressBar)

        // Î°úÍ∑∏Ïù∏ Î≤ÑÌäº ÌÅ¥Î¶≠ Ïù¥Î≤§Ìä∏ Ï≤òÎ¶¨
        loginButton.setOnClickListener {
            val userId = userIdEditText.text.toString().trim()
            val password = passwordEditText.text.toString().trim()

            if (userId.isNotEmpty() && password.isNotEmpty()) {
                viewModel.login(userId, password)  // ViewModelÏùò login() Ìò∏Ï∂ú
            } else {
                Toast.makeText(this, "ÏïÑÏù¥ÎîîÏôÄ ÎπÑÎ∞ÄÎ≤àÌò∏Î•º ÏûÖÎ†•ÌïòÏÑ∏Ïöî.", Toast.LENGTH_SHORT).show()
            }
        }

        // ÌöåÏõêÍ∞ÄÏûÖ Î≤ÑÌäº Ï¥àÍ∏∞Ìôî Î∞è ÌÅ¥Î¶≠ Ïù¥Î≤§Ìä∏ Ï≤òÎ¶¨
        val registerButton: Button = findViewById(R.id.btnRegister)
        registerButton.setOnClickListener {
            val intent = Intent(this@LoginActivity, RegisterActivity::class.java)
            startActivity(intent)
        }

        // Î°úÍ∑∏Ïù∏ ÏÉÅÌÉú Í¥ÄÏ∞∞
        observeLoginState()
    }

    private fun observeLoginState() {
        lifecycleScope.launchWhenStarted {
            viewModel.loginState.collect { state ->
                when (state) {
                    is LoginState.Idle -> {
                        progressBar.visibility = ProgressBar.GONE
                    }
                    is LoginState.Loading -> {
                        progressBar.visibility = ProgressBar.VISIBLE
                    }
                    is LoginState.Success -> {
                        progressBar.visibility = ProgressBar.GONE
                        Toast.makeText(this@LoginActivity, "Î°úÍ∑∏Ïù∏ ÏÑ±Í≥µ!", Toast.LENGTH_SHORT).show()

                        // ‚úÖ Access Token Ï†ÄÏû• (Î≥¥Ïïà Ï†ÄÏû•ÏÜå)
                        SecureStorage.saveAccessToken(this@LoginActivity, state.accessToken)

                        // Î©îÏù∏ ÌôîÎ©¥ÏúºÎ°ú Ïù¥Îèô (MainActivity ÏòàÏãú)
                        val intent = Intent(this@LoginActivity, MainActivity::class.java)
                        startActivity(intent)
                        finish()  // Î°úÍ∑∏Ïù∏ ÌôîÎ©¥ Ï¢ÖÎ£å
                    }
                    is LoginState.Error -> {
                        progressBar.visibility = ProgressBar.GONE
                        // üöÄ ÏÉÅÏÑ∏ Î°úÍ∑∏ Ï∂úÎ†•
                        android.util.Log.e("LoginError", "Î°úÍ∑∏Ïù∏ Ïã§Ìå® Î©îÏãúÏßÄ: ${state.message}")

                        Toast.makeText(this@LoginActivity, "Î°úÍ∑∏Ïù∏ Ïã§Ìå®: ${state.message}", Toast.LENGTH_SHORT).show()
                    }
                }
            }
        }
    }
}
